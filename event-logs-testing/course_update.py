import unittest
from selenium import webdriver
import requests
from decouple import config

class test(unittest.TestCase):
	
	def setUp(self):
		self.user = config("EVENT_LOGS_USER")
		self.pwd = config("EVENT_LOGS_PASSWORD")
		self.url_basic = "http://" + config("IP_ADDRESS") + ":" + config("EVENT_LOGS_PORT") + "/"
		self.token = config("EVENT_API_TOKEN")  #This should be generated by tester
		self.headers={'Authorization': 'Token ' + str(self.token)}
		self.comm_id = raw_input("Enter Community id: ")
		self.course_name = raw_input("Enter Course name: ")
		self.course_id = raw_input("Enter course id: ")

	def test_course_view(self):
		url_api = self.url_basic + 'logapi/event/course/update/'
		result = requests.get(url_api, headers = self.headers).json()
		new_result={}
		for key,value in result.iteritems():
			new_result[key.lower()] = value
		if(new_result["status code"] == 200):
			data = new_result["result"]
			total_hits = new_result["total hits"]

		driver = webdriver.Firefox()
		driver.maximize_window() #For maximizing window
		driver.implicitly_wait(20) #gives an implicit wait for 20 seconds
		driver.get(self.url_basic)
		driver.find_element_by_xpath('//a [@href="/login/?next=/"]').click()
		elem = driver.find_element_by_id("id_username")
		elem.send_keys(self.user)
		elem = driver.find_element_by_id("id_password")
		elem.send_keys(self.pwd)
		driver.find_element_by_class_name('btn-block').click()
		driver.find_element_by_xpath('//a [@href="/communities/"]').click()
		driver.find_element_by_xpath('//a [@href="/community-view/'+ self.comm_id +'/"]').click()
		driver.find_element_by_xpath('//a [@href="/community_content/'+ self.comm_id +'/"]').click()
		driver.find_element_by_xpath('//a [@href="/course-view/'+ self.course_id +'/"]').click()
		driver.find_element_by_xpath('//a [@href="/update-course-info/'+ self.course_id +'/"]').click()
		driver.find_element_by_id("update_id").click()

		url_api = self.url_basic + 'logapi/event/course/update/'
		result = requests.get(url_api, headers = self.headers).json()
		new_result={}
		for key,value in result.iteritems():
			new_result[key.lower()] = value

		if (new_result["status code"] == 200):
			data = new_result["result"]
			if (new_result["total hits"]== total_hits+1):
				self.assertEqual(data[0]["event_name"],"event.course.update")
				self.assertEqual(data[0]["event"]["course-name"], self.course_name)

		driver.quit()

if __name__ == '__main__':
	unittest.main()
